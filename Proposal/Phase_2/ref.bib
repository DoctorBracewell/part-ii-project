@article{10.1145/361002.361016,
  author = {Wegbreit, Ben},
  title = {Mechanical Program Analysis},
  year = {1975},
  issue_date = {Sept. 1975},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {18},
  number = {9},
  issn = {0001-0782},
  url = {https://doi.org/10.1145/361002.361016},
  doi = {10.1145/361002.361016},
  abstract = {One means of analyzing program performance is by deriving closed-form expressions for their execution behavior. This paper discusses the mechanization of such analysis, and describes a system, Metric, which is able to analyze simple Lisp programs and produce, for example, closed-form expressions for their running time expressed in terms of size of input. This paper presents the reasons for mechanizing program analysis, describes the operation of Metric, explains its implementation, and discusses its limitations.},
  journal = {Commun. ACM},
  month = {sep},
  pages = {528â€“539},
  numpages = {12},
  keywords = {analysis of algorithms, programming languages, analysis of programs, execution behavior, difference equations, list processing, execution time, Lisp, performance analysis, generating functions, algebraic manipulation}
}

@online{Optimising-Compilers-Lecture-13-Effect-Systems,  
  author = {Timothy M. Jones},
  title = {Optimising Compilers Lecture 13 Effect Systems},
  year = {2022},
  url = {https://www.cl.cam.ac.uk/teaching/2122/OptComp/slides/lecture13.pdf},
  urldate = {2022-10-07} 
}