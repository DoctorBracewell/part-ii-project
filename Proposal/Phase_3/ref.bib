@article {Sigman7585,
	author = {Sigman, Mariano and Dehaene, Stanislas},
	title = {Brain Mechanisms of Serial and Parallel Processing during Dual-Task Performance},
	volume = {28},
	number = {30},
	pages = {7585--7598},
	year = {2008},
	doi = {10.1523/JNEUROSCI.0948-08.2008},
	publisher = {Society for Neuroscience},
	abstract = {The psychological refractory period (PRP) refers to the fact that humans typically cannot perform two tasks at once. Behavioral experiments have led to the proposal that, in fact, peripheral perceptual and motor stages continue to operate in parallel, and that only a central decision stage imposes a serial bottleneck. We tested this model using neuroimaging methods combined with innovative time-sensitive analysis tools. Subjects performed a dual-task visual{\textendash}auditory paradigm in which a delay of 300 ms was injected into the auditory task either within or outside of the dual-task interference period. Event-related potentials indicated that the first \~{}250 ms of processing were insensitive to dual-task interference, and that the PRP was mainly reflected in a delayed global component. By a clustering analysis based on time-resolved functional magnetic resonance imaging, we identified networks with qualitatively different timing properties: sensory areas tracked the objective time of stimulus presentation, a bilateral parietoprefrontal network correlated with the PRP delay, and an extended bilateral network that included bilateral posterior parietal cortex, premotor cortex, supplementary motor area, anterior part of the insula, and cerebellum was shared by both tasks during the extent of dual-task performance. The results provide physiological evidence for the coexistence of serial and parallel processes within a cognitive task.},
	issn = {0270-6474},
	URL = {https://www.jneurosci.org/content/28/30/7585},
	eprint = {https://www.jneurosci.org/content/28/30/7585.full.pdf},
	journal = {Journal of Neuroscience}
}

@article{10.1145/361002.361016,
  author = {Wegbreit, Ben},
  title = {Mechanical Program Analysis},
  year = {1975},
  issue_date = {Sept. 1975},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {18},
  number = {9},
  issn = {0001-0782},
  url = {https://doi.org/10.1145/361002.361016},
  doi = {10.1145/361002.361016},
  abstract = {One means of analyzing program performance is by deriving closed-form expressions for their execution behavior. This paper discusses the mechanization of such analysis, and describes a system, Metric, which is able to analyze simple Lisp programs and produce, for example, closed-form expressions for their running time expressed in terms of size of input. This paper presents the reasons for mechanizing program analysis, describes the operation of Metric, explains its implementation, and discusses its limitations.},
  journal = {Commun. ACM},
  month = {sep},
  pages = {528â€“539},
  numpages = {12},
  keywords = {analysis of algorithms, programming languages, analysis of programs, execution behavior, difference equations, list processing, execution time, Lisp, performance analysis, generating functions, algebraic manipulation}
}

@online{Optimising-Compilers-Lecture-13-Effect-Systems,  
  author = {Timothy M. Jones},
  title = {Optimising Compilers Lecture 13 Effect Systems},
  year = {2022},
  url = {https://www.cl.cam.ac.uk/teaching/2122/OptComp/slides/lecture13.pdf},
  urldate = {2022-10-07} 
}